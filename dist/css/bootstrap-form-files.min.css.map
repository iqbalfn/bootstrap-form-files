{"version":3,"sources":["../../src/scss/bootstrap.scss","../../src/scss/_form-files.scss","../../src/scss/vendor/_rfs.scss","../../src/scss/vendor/_border-radius.scss","../../src/scss/vendor/_transition.scss"],"names":[],"mappings":"AAAA;;;;ACAA,iBACI,QAAA,KAGJ,WACI,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,eAAA,OACA,MAAA,KCwHE,UAAA,KDpHF,OAAA,MACA,YAAA,IACA,YAAA,IACA,iBAAA,KACA,gBAAA,YACA,OAAA,IAAA,MAAA,QEXA,cAAA,OFgBJ,mBACI,YAAA,EAAA,KACA,cAAA,EAAA,KACA,aAAA,EAAA,KAGJ,iBACI,WAAA,KACA,OAAA,EACA,QAAA,EACA,iBAAA,EAAA,KAAA,EACA,WAAA,KACA,WAAA,OANJ,oBASQ,SAAA,SACA,WAAA,OACA,OAAA,QAXR,gDEbI,uBAAA,OACA,wBAAA,OFYJ,6BGrBM,mBAAA,OAAA,IAAA,KAAA,WAAA,OAAA,IAAA,KAKF,uCHgBJ,6BGfM,mBAAA,KAAA,WAAA,MHeN,yBAwBY,OAAA,EAKZ,gBACI,QAAA,MACA,QAAA,QAAA,OACA,gBAAA,KACA,MAAA,QACA,SAAA,SACA,cAAA,QANJ,sBASQ,gBAAA,KACA,iBAAA,QAIR,qBACI,MAAA,KACA,MAAA,SACA,OAAA,SACA,WAAA,QACA,iBAAA,KACA,aAAA,OACA,iBAAA,QACA,QAAA,YAAA,QAAA,KACA,kBAAA,OAAA,YAAA,OACA,iBAAA,OAAA,gBAAA,OAGJ,sBACI,QAAA,MACA,SAAA,OACA,cAAA,SACA,YAAA,OAGJ,qBACI,UAAA,WACA,QAAA,GACA,QAAA,MACA,SAAA,OACA,cAAA,SACA,YAAA,OAGJ,uBACI,SAAA,SACA,MAAA,OACA,IAAA","sourcesContent":["/*!\n * Bootstrap Form Files v0.0.2 (https://iqbalfn.github.io/bootstrap-form-files/)\n * Copyright 2019 Iqbal Fauzi\n * Licensed under MIT (https://github.com/iqbalfn/bootstrap-form-files/blob/master/LICENSE)\n */\n\n@import \"vendor/variables\";\n@import \"vendor/border-radius\";\n@import \"vendor/box-shadow\";\n@import \"vendor/rfs\";\n@import \"vendor/transition\";\n\n@import \"variables\";\n@import \"form-files\";",".formfiles-model{\n    display: none;\n}\n\n.formfiles{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    // padding: $formfiles-padding-y $formfiles-padding-x;\n    font-family: $formfiles-font-family;\n    @include font-size($formfiles-font-size);\n    height: $formfiles-height;\n    font-weight: $formfiles-font-weight;\n    line-height: $formfiles-line-height;\n    background-color: $formfiles-bg;\n    background-clip: padding-box;\n    border: $formfiles-border-width solid $formfiles-border-color;\n    @include border-radius($formfiles-border-radius, 0);\n    @include box-shadow($formfiles-box-shadow);\n}\n\n.formfiles-btn-add{\n    border-left: 0 none;\n    border-bottom: 0 none;\n    border-right: 0 none;\n}\n\n.formfiles-items{\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    flex: 1;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    > li{\n        position: relative;\n        overflow-y: hidden;\n        height: $formfiles-item-height;\n\n        &:first-child{\n            > .formfiles-item{\n                @include border-top-radius($formfiles-border-radius);\n            }\n        }\n\n        &.slide-up{\n            @include transition($formfiles-item-height-transition);\n        }\n\n        &.hide{\n            height: 0;\n        }\n    }\n}\n\n.formfiles-item{\n    display: block;\n    padding: $formfiles-padding-y $formfiles-padding-x;\n    text-decoration: none;\n    color: $formfiles-color;\n    position: relative;\n    padding-right: ($formfiles-padding-x * 3);\n\n    &:hover{\n        text-decoration: none;\n        background-color: $formfiles-item-hover-bg;\n    }\n}\n\n.formfiles-item-icon{\n    float:left;\n    width: $formfiles-item-icon-size;\n    height: $formfiles-item-icon-size;\n    margin-top: $formfiles-item-icon-margin-top;\n    background-color: #eee;\n    margin-right: $formfiles-padding-x;\n    background-color: $formfiles-item-icon-bg;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.formfiles-item-title{\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.formfiles-item-meta{\n    font-size: $formfiles-item-meta-font-size;\n    opacity: .8;\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.formfiles-item-remove{\n    position: absolute;\n    right: $formfiles-padding-x;\n    top: $formfiles-padding-y;\n}","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated font-resizing\n//\n// See https://github.com/twbs/rfs\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n// Resize font-size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Responsive font-size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Variables for storing static and fluid rescaling\n    $rfs-static: null;\n    $rfs-fluid: null;\n\n    // Remove px-unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font-size\n    @if $rfs-font-size-unit == rem {\n      $rfs-static: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};\n    }\n    @else if $rfs-font-size-unit == px {\n      $rfs-static: #{$fs}px#{$rfs-suffix};\n    }\n    @else {\n      @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n    }\n\n    // Only add media query if font-size is bigger as the minimum font-size\n    // If $rfs-factor == 1, no rescaling will take place\n    @if $fs > $rfs-base-font-size and $enable-responsive-font-sizes {\n      $min-width: null;\n      $variable-unit: null;\n\n      // Calculate minimum font-size for given font-size\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between given font-size and minimum font-size for given font-size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      // No need to check if the unit is valid, because we did that before\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // If two-dimensional, use smallest of screen width and height\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size.\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n    }\n\n    // Rendering\n    @if $rfs-fluid == null {\n      // Only render static font-size if no fluid font-size is available\n      font-size: $rfs-static;\n    }\n    @else {\n      $mq-value: null;\n\n      // RFS breakpoint formatting\n      @if $rfs-breakpoint-unit == em or $rfs-breakpoint-unit == rem {\n        $mq-value: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};\n      }\n      @else if $rfs-breakpoint-unit == px {\n        $mq-value: #{$rfs-breakpoint}px;\n      }\n      @else {\n        @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n      }\n\n      @if $rfs-class == \"disable\" {\n        // Adding an extra class increases specificity,\n        // which prevents the media query to override the font size\n        &,\n        .disable-responsive-font-size &,\n        &.disable-responsive-font-size {\n          font-size: $rfs-static;\n        }\n      }\n      @else {\n        font-size: $rfs-static;\n      }\n\n      @if $rfs-two-dimensional {\n        @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n      @else {\n        @media (max-width: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixin uses RFS to rescale font sizes\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","// stylelint-disable property-blacklist\n// Single side border-radius\n\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: $radius;\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n    border-top-right-radius: $radius;\n  }\n}\n\n@mixin border-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: $radius;\n    border-bottom-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n@mixin border-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n@mixin border-top-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n  }\n}\n\n@mixin border-top-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-right-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-left-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: $radius;\n  }\n}\n","// stylelint-disable property-blacklist\n@mixin transition($transition...) {\n  @if $enable-transitions {\n    @if length($transition) == 0 {\n      transition: $transition-base;\n    } @else {\n      transition: $transition;\n    }\n  }\n\n  @if $enable-prefers-reduced-motion-media-query {\n    @media (prefers-reduced-motion: reduce) {\n      transition: none;\n    }\n  }\n}\n"]}