{
	"version": 3,
	"file": "bootstrap-form-files.css",
	"sources": [
		"../../src/scss/bootstrap.scss",
		"../../src/scss/vendor/_variables.scss",
		"../../src/scss/vendor/_border-radius.scss",
		"../../src/scss/vendor/_box-shadow.scss",
		"../../src/scss/vendor/_rfs.scss",
		"../../src/scss/vendor/_transition.scss",
		"../../src/scss/_variables.scss",
		"../../src/scss/_form-files.scss"
	],
	"sourcesContent": [
		"/*!\n * Bootstrap Form Files v0.0.1 (https://iqbalfn.github.io/bootstrap-form-files/)\n * Copyright 2019 Iqbal Fauzi\n * Licensed under MIT (https://github.com/iqbalfn/bootstrap-form-files/blob/master/LICENSE)\n */\n\n@import \"vendor/variables\";\n@import \"vendor/border-radius\";\n@import \"vendor/box-shadow\";\n@import \"vendor/rfs\";\n@import \"vendor/transition\";\n\n@import \"variables\";\n@import \"form-files\";",
		"$white:                       #fff !default;\n$gray-700:                    #495057 !default;\n$gray-400:                    #ced4da !default;\n$gray-200:                    #e9ecef !default;\n$gray-100:                    #f8f9fa !default;\n$black:                       #000 !default;\n\n$line-height-sm:              1.5 !default;\n\n$enable-rounded:                              true !default;\n$enable-shadows:                              false !default;\n$enable-transitions:                          true !default;\n$enable-prefers-reduced-motion-media-query:   true !default;\n\n$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`\n$font-size-sm:                $font-size-base * .875 !default;\n$font-weight-normal:          400 !default;\n$line-height-base:            1.5 !default;\n$input-btn-padding-y:         .375rem !default;\n$input-btn-padding-x:         .75rem !default;\n$input-btn-font-family:       null !default;\n$border-width:                1px !default;\n$border-radius:               .25rem !default;\n\n$input-btn-font-size:         $font-size-base !default;\n$font-weight-base:            $font-weight-normal !default;\n$input-btn-line-height:       $line-height-base !default;\n$input-btn-border-width:      $border-width !default;\n\n$input-padding-y:                       $input-btn-padding-y !default;\n$input-padding-x:                       $input-btn-padding-x !default;\n$input-font-family:                     $input-btn-font-family !default;\n$input-font-size:                       $input-btn-font-size !default;\n$input-font-weight:                     $font-weight-base !default;\n$input-line-height:                     $input-btn-line-height !default;\n$input-color:                           $gray-700 !default;\n$input-bg:                              $white !default;\n$input-border-width:                    $input-btn-border-width !default;\n$input-border-color:                    $gray-400 !default;\n$input-border-radius:                   $border-radius !default;\n$input-box-shadow:                      inset 0 1px 1px rgba($black, .075) !default;",
		"// stylelint-disable property-blacklist\n// Single side border-radius\n\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: $radius;\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n    border-top-right-radius: $radius;\n  }\n}\n\n@mixin border-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: $radius;\n    border-bottom-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n@mixin border-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n@mixin border-top-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n  }\n}\n\n@mixin border-top-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-right-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-left-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: $radius;\n  }\n}\n",
		"@mixin box-shadow($shadow...) {\n  @if $enable-shadows {\n    $result: ();\n\n    @if (length($shadow) == 1) {\n      // We can pass `@include box-shadow(none);`\n      $result: $shadow;\n    } @else {\n      // Filter to avoid invalid properties for example `box-shadow: none, 1px 1px black;`\n      @for $i from 1 through length($shadow) {\n        @if nth($shadow, $i) != \"none\" {\n          $result: append($result, nth($shadow, $i), \"comma\");\n        }\n      }\n    }\n    @if (length($result) > 0) {\n      box-shadow: $result;\n    }\n  }\n}\n",
		"// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated font-resizing\n//\n// See https://github.com/twbs/rfs\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n// Resize font-size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Responsive font-size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Variables for storing static and fluid rescaling\n    $rfs-static: null;\n    $rfs-fluid: null;\n\n    // Remove px-unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font-size\n    @if $rfs-font-size-unit == rem {\n      $rfs-static: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};\n    }\n    @else if $rfs-font-size-unit == px {\n      $rfs-static: #{$fs}px#{$rfs-suffix};\n    }\n    @else {\n      @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n    }\n\n    // Only add media query if font-size is bigger as the minimum font-size\n    // If $rfs-factor == 1, no rescaling will take place\n    @if $fs > $rfs-base-font-size and $enable-responsive-font-sizes {\n      $min-width: null;\n      $variable-unit: null;\n\n      // Calculate minimum font-size for given font-size\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between given font-size and minimum font-size for given font-size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      // No need to check if the unit is valid, because we did that before\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // If two-dimensional, use smallest of screen width and height\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size.\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n    }\n\n    // Rendering\n    @if $rfs-fluid == null {\n      // Only render static font-size if no fluid font-size is available\n      font-size: $rfs-static;\n    }\n    @else {\n      $mq-value: null;\n\n      // RFS breakpoint formatting\n      @if $rfs-breakpoint-unit == em or $rfs-breakpoint-unit == rem {\n        $mq-value: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};\n      }\n      @else if $rfs-breakpoint-unit == px {\n        $mq-value: #{$rfs-breakpoint}px;\n      }\n      @else {\n        @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n      }\n\n      @if $rfs-class == \"disable\" {\n        // Adding an extra class increases specificity,\n        // which prevents the media query to override the font size\n        &,\n        .disable-responsive-font-size &,\n        &.disable-responsive-font-size {\n          font-size: $rfs-static;\n        }\n      }\n      @else {\n        font-size: $rfs-static;\n      }\n\n      @if $rfs-two-dimensional {\n        @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n      @else {\n        @media (max-width: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixin uses RFS to rescale font sizes\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n",
		"// stylelint-disable property-blacklist\n@mixin transition($transition...) {\n  @if $enable-transitions {\n    @if length($transition) == 0 {\n      transition: $transition-base;\n    } @else {\n      transition: $transition;\n    }\n  }\n\n  @if $enable-prefers-reduced-motion-media-query {\n    @media (prefers-reduced-motion: reduce) {\n      transition: none;\n    }\n  }\n}\n",
		"$formfiles-padding-y:               $input-padding-y;\n$formfiles-padding-x:               $input-padding-x;\n$formfiles-font-family:             $input-font-family;\n$formfiles-font-size:               $input-font-size;\n$formfiles-font-weight:             $input-font-weight;\n$formfiles-line-height:             $input-line-height;\n$formfiles-color:                   $input-color;\n$formfiles-bg:                      $input-bg;\n$formfiles-border-width:            $input-border-width;\n$formfiles-border-color:            $input-border-color;\n$formfiles-height:                  25rem;\n$formfiles-border-radius:           $input-border-radius;\n$formfiles-box-shadow:              $input-box-shadow;\n\n$formfiles-item-hover-bg:           $gray-100;\n$formfiles-item-height-transition:  height .3s ease;\n$formfiles-item-height:             3.25rem;\n\n$formfiles-item-meta-font-size:     ($font-size-sm / 1.3);\n\n$formfiles-item-icon-size:          1.875rem;\n$formfiles-item-icon-margin-top:    0.313rem;\n$formfiles-item-icon-bg:            $gray-200;",
		".formfiles-model{\n    display: none;\n}\n\n.formfiles{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    // padding: $formfiles-padding-y $formfiles-padding-x;\n    font-family: $formfiles-font-family;\n    @include font-size($formfiles-font-size);\n    height: $formfiles-height;\n    font-weight: $formfiles-font-weight;\n    line-height: $formfiles-line-height;\n    background-color: $formfiles-bg;\n    background-clip: padding-box;\n    border: $formfiles-border-width solid $formfiles-border-color;\n    @include border-radius($formfiles-border-radius, 0);\n    @include box-shadow($formfiles-box-shadow);\n}\n\n.formfiles-btn-add{\n    border-left: 0 none;\n    border-bottom: 0 none;\n    border-right: 0 none;\n}\n\n.formfiles-items{\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    flex: 1;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    > li{\n        position: relative;\n        overflow-y: hidden;\n        height: $formfiles-item-height;\n\n        &:first-child{\n            > .formfiles-item{\n                @include border-top-radius($formfiles-border-radius);\n            }\n        }\n\n        &.slide-up{\n            @include transition($formfiles-item-height-transition);\n        }\n\n        &.hide{\n            height: 0;\n        }\n    }\n}\n\n.formfiles-item{\n    display: block;\n    padding: $formfiles-padding-y $formfiles-padding-x;\n    text-decoration: none;\n    color: $formfiles-color;\n    position: relative;\n    padding-right: ($formfiles-padding-x * 3);\n\n    &:hover{\n        text-decoration: none;\n        background-color: $formfiles-item-hover-bg;\n    }\n}\n\n.formfiles-item-icon{\n    float:left;\n    width: $formfiles-item-icon-size;\n    height: $formfiles-item-icon-size;\n    margin-top: $formfiles-item-icon-margin-top;\n    background-color: #eee;\n    margin-right: $formfiles-padding-x;\n    background-color: $formfiles-item-icon-bg;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.formfiles-item-title{\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.formfiles-item-meta{\n    font-size: $formfiles-item-meta-font-size;\n    opacity: .8;\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.formfiles-item-remove{\n    position: absolute;\n    right: $formfiles-padding-x;\n    top: $formfiles-padding-y;\n}"
	],
	"names": [],
	"mappings": "AAAA;;;;GAIG;AOJH,AAAA,gBAAgB,CAAA;EACZ,OAAO,EAAE,IAAI;CAChB;;AAED,AAAA,UAAU,CAAA;EACN,OAAO,EAAE,IAAI;EACb,cAAc,EAAE,MAAM;EACtB,KAAK,EAAE,IAAI;EHwHT,SAAS,EAtCE,IAAC;EG9Ed,MAAM,EDD0B,KAAK;ECErC,WAAW,ENIe,GAAG;EMH7B,WAAW,ENIe,GAAG;EMH7B,gBAAgB,ENdU,IAAI;EMe9B,eAAe,EAAE,WAAW;EAC5B,MAAM,ENKoB,GAAG,CMLG,KAAK,CNdX,OAAO;ECGjC,aAAa,EDiBa,OAAM;CMHnC;;AAED,AAAA,kBAAkB,CAAA;EACd,WAAW,EAAE,MAAM;EACnB,aAAa,EAAE,MAAM;EACrB,YAAY,EAAE,MAAM;CACvB;;AAED,AAAA,gBAAgB,CAAA;EACZ,UAAU,EAAE,IAAI;EAChB,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC;EACV,IAAI,EAAE,CAAC;EACP,UAAU,EAAE,IAAI;EAChB,UAAU,EAAE,MAAM;CAqBrB;;AA3BD,AAQI,gBARY,GAQV,EAAE,CAAA;EACA,QAAQ,EAAE,QAAQ;EAClB,UAAU,EAAE,MAAM;EAClB,MAAM,EDtBsB,OAAO;CCqCtC;;AA1BL,AAcY,gBAdI,GAQV,EAAE,AAKC,YAAY,GACP,eAAe,CAAA;EL3BzB,sBAAsB,EDQI,OAAM;ECPhC,uBAAuB,EDOG,OAAM;CMqBvB;;AAhBb,AAmBQ,gBAnBQ,GAQV,EAAE,AAWC,SAAS,CAAA;EFxCZ,UAAU,ECSoB,MAAM,CAAC,IAAG,CAAC,IAAI;CCiC1C;;AFrCL,MAAM,EAAE,sBAAsB,EAAE,MAAM;EEgB1C,AAmBQ,gBAnBQ,GAQV,EAAE,AAWC,SAAS,CAAA;IFlCZ,UAAU,EAAE,IAAI;GEoCb;;;AArBT,AAuBQ,gBAvBQ,GAQV,EAAE,AAeC,KAAK,CAAA;EACF,MAAM,EAAE,CAAC;CACZ;;AAIT,AAAA,eAAe,CAAA;EACX,OAAO,EAAE,KAAK;EACd,OAAO,ENxCmB,QAAO,CACP,OAAM;EMwChC,eAAe,EAAE,IAAI;EACrB,KAAK,EN3DqB,OAAO;EM4DjC,QAAQ,EAAE,QAAQ;EAClB,aAAa,EAAE,OAA0B;CAM5C;;AAZD,AAQI,eARW,AAQV,MAAM,CAAA;EACH,eAAe,EAAE,IAAI;EACrB,gBAAgB,EN9DM,OAAO;CM+DhC;;AAGL,AAAA,oBAAoB,CAAA;EAChB,KAAK,EAAC,IAAI;EACV,KAAK,EDpD2B,QAAQ;ECqDxC,MAAM,EDrD0B,QAAQ;ECsDxC,UAAU,EDrDsB,QAAQ;ECsDxC,gBAAgB,EAAE,IAAI;EACtB,YAAY,ENzDc,OAAM;EM0DhC,gBAAgB,EN1EU,OAAO;EM2EjC,OAAO,EAAE,IAAI;EACb,WAAW,EAAE,MAAM;EACnB,eAAe,EAAE,MAAM;CAC1B;;AAED,AAAA,qBAAqB,CAAA;EACjB,OAAO,EAAE,KAAK;EACd,QAAQ,EAAE,MAAM;EAChB,aAAa,EAAE,QAAQ;EACvB,WAAW,EAAE,MAAM;CACtB;;AAED,AAAA,oBAAoB,CAAA;EAChB,SAAS,EDzEuB,WAAqB;EC0ErD,OAAO,EAAE,EAAE;EACX,OAAO,EAAE,KAAK;EACd,QAAQ,EAAE,MAAM;EAChB,aAAa,EAAE,QAAQ;EACvB,WAAW,EAAE,MAAM;CACtB;;AAED,AAAA,sBAAsB,CAAA;EAClB,QAAQ,EAAE,QAAQ;EAClB,KAAK,ENlFqB,OAAM;EMmFhC,GAAG,ENpFuB,QAAO;CMqFpC"
}